# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

steps:

# - task: Docker@2
#   inputs:
   
#     containerRegistry: '{"loginServer":"ffc0acr0ce2.azurecr.cn", "id" : "/subscriptions/2679f75f-10cb-466f-b2b4-ea24653a0e5c/resourceGroups/feature-flags-co/providers/Microsoft.ContainerRegistry/registries/ffc0acr0ce2"}'
#     repository: '$(System.DefaultWorkingDirectory)/FeatureFlagsCo.Experiments'
#     command: 'buildAndPush'
#     Dockerfile: '**/Dockerfile'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'azure-china-devops'
    azureContainerRegistry: '{"loginServer":"ffc0acr0ce2.azurecr.cn", "id" : "/subscriptions/2679f75f-10cb-466f-b2b4-ea24653a0e5c/resourceGroups/feature-flags-co/providers/Microsoft.ContainerRegistry/registries/ffc0acr0ce2"}'
    dockerComposeFile: '$(System.DefaultWorkingDirectory)/FeatureFlagsCo.Experiments/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'rm --all'
    
# - task: Docker@2
#   inputs:
#     containerRegistry: 'agiletoggle'
#     command: 'buildAndPush'
#     Dockerfile: '**/Dockerfile'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'azure-china-devops'
    appType: 'webAppContainer'
    WebAppName: 'ffc-experiment-dev'
    DockerNamespace: 'ffc0registry0dev.azurecr.io'
    DockerRepository: 'ffc-experiment'
    DockerImageTag: 'latest'