# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
  
pool:
  vmImage: windows-latest

variables:
- group: MJKG_SQL_SETTINGS
  
stages:

- stage: 'Build'
  displayName: 'Publish .dacpac'
  jobs: 
    - job: 'PublishTemplates'
      steps:
      - task: MSBuild@1
        displayName: 'Build database'
        inputs:
          solution: '**/FeatureFlagsCo.SqlDatabase.sqlproj'
          msbuildArchitecture: 'x64'

      - script: |
          echo $(Build.SourcesDirectory)
          dir
          cd FeatureFlagsCo.SqlDatabase
          dir
          cd bin
          dir
      - task: CopyFiles@2
        displayName: 'Copy composing to: $(build.artifactstagingdirectory)'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/FeatureFlagsCo.SqlDatabase/bin/Debug/'
          TargetFolder: '$(build.artifactstagingdirectory)/templates'
      
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'

- stage: 'Development'
  condition: succeeded()
  jobs:
  - deployment: 'DeployToDevelopment'
    environment: 'Approval_SQLDatabase_Dev'
    strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.DefaultWorkingDirectory)'

            
            - task: SqlAzureDacpacDeployment@1
              inputs:
                azureSubscription: 'azure-china-devops'
                AuthenticationType: 'server'
                ServerName: '52.131.239.36,1433'
                DatabaseName: 'ffc-sqldb-ce2'
                SqlUsername: 'sa'
                SqlPassword: '$(SqlPassword_Dev)'
                deployType: 'DacpacTask'
                DeploymentAction: 'Publish'
                DacpacFile: '$(System.DefaultWorkingDirectory)/drop/templates/FeatureFlagsCo.SqlDatabase.dacpac'
                IpDetectionMethod: 'AutoDetect'
  
- stage: 'Production'
  dependsOn: Development
  condition: succeeded()
  jobs:
  - deployment: 'DeployToProduction'
    environment: 'Approval_SQLDatabase'
    strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.DefaultWorkingDirectory)'
            - task: SqlAzureDacpacDeployment@1
              inputs:
                azureSubscription: 'azure-china-devops'
                AuthenticationType: 'server'
                ServerName: 'ffc-sqlsrv-ce2.database.chinacloudapi.cn,1433'
                DatabaseName: 'ffc-sqldb-ce2'
                SqlUsername: 'ffc-sqlsrv-ce2'
                SqlPassword: '$(SqlPassword)'
                deployType: 'DacpacTask'
                DeploymentAction: 'Publish'
                DacpacFile: '$(System.DefaultWorkingDirectory)/drop/templates/FeatureFlagsCo.SqlDatabase.dacpac'
                IpDetectionMethod: 'AutoDetect'

